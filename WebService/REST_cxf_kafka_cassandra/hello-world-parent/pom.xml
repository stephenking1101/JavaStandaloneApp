<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>hello-world-parent</artifactId>
    <packaging>pom</packaging>
	<version>master-SNAPSHOT</version>
    <name>${project.groupId}:${project.artifactId}</name>

    <properties>
        <jdk.version>1.8</jdk.version>
        <mockito.version>1.9.0</mockito.version>
        <cassandra.unit.version>3.0.0.1</cassandra.unit.version>
        <eclipse.jetty.version>8.1.22.v20160922</eclipse.jetty.version>
        <rest.assured.version>2.7.0</rest.assured.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>  
		<repo-internal-version>master-SNAPSHOT</repo-internal-version>
		<kafka.version>1.0.0</kafka.version>
		<spring-kafka-test.version>2.1.0.RELEASE</spring-kafka-test.version>
		<spring-kafka.version>2.1.0.RELEASE</spring-kafka.version>
		<spring.version>5.0.2.RELEASE</spring.version>
		<cxf.version>3.2.1</cxf.version>
		<dockerfile.dir>${project.build.directory}/docker-build</dockerfile.dir>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.spring.platform</groupId>
                <artifactId>platform-bom</artifactId>
                <version>2.0.8.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
              <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-context</artifactId>
		        <version>${spring.version}</version>
		      </dependency>
		      <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-context-support</artifactId>
		        <version>${spring.version}</version>
		      </dependency>
              <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-messaging</artifactId>
		        <version>${spring.version}</version>
		      </dependency>
		      <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-orm</artifactId>
		        <version>${spring.version}</version>
		      </dependency>
		      <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-oxm</artifactId>
		        <version>${spring.version}</version>
		      </dependency>
		      <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-test</artifactId>
		        <version>${spring.version}</version>
		      </dependency>
		      <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-jdbc</artifactId>
		        <version>${spring.version}</version>
		      </dependency>
		      <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-tx</artifactId>
		        <version>${spring.version}</version>
		      </dependency>
		      <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-web</artifactId>
		        <version>${spring.version}</version>
		      </dependency>
		      <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-webmvc</artifactId>
		        <version>${spring.version}</version>
		      </dependency>
		      <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-core</artifactId>
		        <version>${spring.version}</version>
		      </dependency>
		      <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-aspects</artifactId>
		        <version>${spring.version}</version>
		      </dependency>
		      <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-jms</artifactId>
		        <version>${spring.version}</version>
		      </dependency>
		      <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-aop</artifactId>
		        <version>${spring.version}</version>
		      </dependency>
		      <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-beans</artifactId>
		        <version>${spring.version}</version>
		      </dependency>
		      <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-asm</artifactId>
		        <version>${spring.version}</version>
		      </dependency>
		      <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-expression</artifactId>
		        <version>${spring.version}</version>
		      </dependency>
		      <dependency>
		        <groupId>org.springframework</groupId>
		        <artifactId>spring-instrument</artifactId>
		        <version>${spring.version}</version>
		      </dependency>
            <dependency>
			    <groupId>org.springframework.retry</groupId>
			    <artifactId>spring-retry</artifactId>
			    <version>1.2.1.RELEASE</version>
			</dependency>
            <!--repo internal begins-->
            <dependency>
                <groupId>com.example</groupId>
                <artifactId>hello-world-api</artifactId>
                <version>${repo-internal-version}</version>
            </dependency>
            <dependency>
                <groupId>com.example</groupId>
                <artifactId>hello-world-war</artifactId>
                <version>${repo-internal-version}</version>
                <type>war</type>
            </dependency>
            <dependency>
                <groupId>com.example</groupId>
                <artifactId>hello-world-store</artifactId>
                <version>${repo-internal-version}</version>
            </dependency>
            <dependency>
	            <groupId>com.example</groupId>
	            <artifactId>hello-world-store-cass</artifactId>
	            <version>${repo-internal-version}</version>
	        </dependency>
	        <dependency>
	            <groupId>com.example</groupId>
	            <artifactId>hello-world-common</artifactId>
	            <version>${repo-internal-version}</version>
	        </dependency>
            <!--repo internal ends-->
            <dependency>
			   <groupId>org.apache.cxf</groupId>
			   <artifactId>cxf-rt-frontend-jaxrs</artifactId>
			   <version>${cxf.version}</version>
			</dependency>
			<dependency>
	            <groupId>org.apache.cxf</groupId>
	            <artifactId>cxf-rt-rs-client</artifactId>
	            <version>${cxf.version}</version>
	        </dependency>
	        <dependency>
			    <groupId>org.apache.cxf</groupId>
			    <artifactId>cxf-rt-features-clustering</artifactId>
			    <version>${cxf.version}</version>
			</dependency>
			<dependency>
                <groupId>com.datastax.cassandra</groupId>
                <artifactId>cassandra-driver-core</artifactId>
                <version>3.0.2</version>
            </dependency>
            <dependency>
	            <groupId>com.datastax.cassandra</groupId>
	            <artifactId>cassandra-driver-mapping</artifactId>
	            <exclusions>
	                <exclusion>
	                    <groupId>com.google.guava</groupId>
	                    <artifactId>guava</artifactId>
	                </exclusion>
	            </exclusions>
	            <version>3.0.2</version>
	        </dependency>
	        <dependency>
	            <groupId>org.apache.lucene</groupId>
	            <artifactId>lucene-queryparser</artifactId>
	            <version>5.5.1</version>
	        </dependency>
	        <dependency>
	            <groupId>com.stratio.cassandra</groupId>
	            <artifactId>cassandra-lucene-index-builder</artifactId>
	            <version>3.0.7.2</version>
	        </dependency>
	        <dependency>
	            <groupId>org.apache.lucene</groupId>
	            <artifactId>lucene-analyzers-common</artifactId>
	            <version>5.5.1</version>
	        </dependency>
	        <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${spring-kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>3.2.1</version>
            </dependency>
            <dependency>
			    <groupId>org.apache.commons</groupId>
			    <artifactId>commons-lang3</artifactId>
			    <version>3.2.1</version>
			</dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>2.9.1</version>
            </dependency>
            <dependency>
	            <groupId>com.fasterxml.jackson.core</groupId>
	            <artifactId>jackson-databind</artifactId>
	            <version>2.9.1</version>
	        </dependency>
	        <dependency>  
	            <groupId>com.fasterxml.jackson.core</groupId>  
	            <artifactId>jackson-annotations</artifactId>  
	            <version>2.9.1</version>  
	        </dependency>  
	        <dependency>
	            <groupId>com.fasterxml.jackson.jaxrs</groupId>
	            <artifactId>jackson-jaxrs-json-provider</artifactId>
	            <version>2.9.1</version>
	        </dependency>
	        <dependency>
			    <groupId>ch.qos.logback</groupId>
			    <artifactId>logback-classic</artifactId>
			    <version>1.1.7</version>
			</dependency>
			<dependency>
			    <groupId>org.slf4j</groupId>
			    <artifactId>jcl-over-slf4j</artifactId>
			    <version>1.7.25</version>
			</dependency>
			<dependency>
			    <groupId>org.slf4j</groupId>
			    <artifactId>slf4j-api</artifactId>
			    <version>1.7.25</version>
			</dependency>
			<dependency>
		        <groupId>javax.ws.rs</groupId>
			    <artifactId>javax.ws.rs-api</artifactId>
			    <version>2.1</version>
		    </dependency>
            <!-- test starts -->
            <dependency>
                <groupId>org.eclipse.jetty.aggregate</groupId>
                <artifactId>jetty-webapp</artifactId>
                <scope>test</scope>
                <version>${eclipse.jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>2.6.0</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.jayway.restassured</groupId>
                <artifactId>rest-assured</artifactId>
                <version>${rest.assured.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.core</groupId>
                        <artifactId>jackson-databind</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.cassandraunit</groupId>
                <artifactId>cassandra-unit</artifactId>
                <version>${cassandra.unit.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>com.sun.xml.bind</groupId>
                        <artifactId>jaxb-impl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.datastax.cassandra</groupId>
                        <artifactId>cassandra-driver-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-classic</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
			    <groupId>com.google.guava</groupId>
			    <artifactId>guava</artifactId>
			    <version>18.0</version>
			</dependency>
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka-test</artifactId>
                <version>${spring-kafka-test.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.kafka</groupId>
                        <artifactId>kafka-clients</artifactId>
                    </exclusion>
                </exclusions>
                <scope>test</scope>
            </dependency>
            <dependency>
			    <groupId>org.apache.kafka</groupId>
			    <artifactId>kafka_2.11</artifactId>
			    <version>${kafka.version}</version>
			    <exclusions>
		              <exclusion>
		                  <groupId>org.slf4j</groupId>
		                  <artifactId>slf4j-log4j12</artifactId>
		              </exclusion>
		        </exclusions>
			    <scope>test</scope>
			</dependency>
			<dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_2.11</artifactId>
                <version>${kafka.version}</version>
                <exclusions>
                      <exclusion>
                          <groupId>org.slf4j</groupId>
                          <artifactId>slf4j-log4j12</artifactId>
                      </exclusion>
                </exclusions>
                <classifier>test</classifier>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http-jetty</artifactId>
                <version>${cxf.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.example</groupId>
                <artifactId>hello-world-common</artifactId>
                <version>${repo-internal-version}</version>
                <classifier>tests</classifier>
                <scope>test</scope>
            </dependency>
            <dependency>
	            <groupId>org.mockito</groupId>
	            <artifactId>mockito-core</artifactId>
	            <version>${mockito.version}</version>
	            <scope>test</scope>
	        </dependency>
            <!-- test ends -->
        </dependencies>
	</dependencyManagement>

    <profiles>
        <profile>
            <id>component-test</id>
            <build>
                <plugins>
                    <!-- Run component test -->
                    <plugin>
                        <!-- The Surefire Plugin is used during the test phase of the build lifecycle to execute the unit tests of an application. -->
                        <!-- It generates reports in ${basedir}/target/surefire-reports/TEST-*.xml. -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <!-- <forkMode>always</forkMode> -->
                            <includes>
                                <include>**/*CT.java</include>
                            </includes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    
    <build>
        <pluginManagement>
             <plugins>
                  <plugin>
	                  <groupId>org.apache.maven.plugins</groupId>
	                  <artifactId>maven-compiler-plugin</artifactId>
	                  <version>3.3</version>
                  </plugin>
                  <plugin>
                      <groupId>org.apache.maven.plugins</groupId>
                      <artifactId>maven-surefire-plugin</artifactId>
                      <version>2.20.1</version>
                  </plugin>
                  <plugin>
		              <groupId>org.apache.maven.plugins</groupId>
		              <artifactId>maven-dependency-plugin</artifactId>
		              <version>2.10</version>
		          </plugin>
		          <plugin>
					    <groupId>org.apache.maven.plugins</groupId>
					    <artifactId>maven-jar-plugin</artifactId>
					    <version>3.0.2</version>
		          </plugin>
                  <plugin>
	                  <groupId>io.fabric8</groupId>
		              <artifactId>docker-maven-plugin</artifactId>
		              <version>0.22.0</version>
                  </plugin>
             </plugins>
        </pluginManagement>
        <plugins>
            <!-- Set JDK Compiler Level -->
          <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
          </plugin>
        </plugins>
    </build>
</project>
